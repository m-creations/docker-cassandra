#!/bin/bash
set -x

export PATH=$PATH:$JAVA_HOME/bin/bundled

function shut_down() {
    echo "Shutting down"
    kill -TERM $child 2>/dev/null
}

trap "shut_down" SIGKILL SIGTERM SIGHUP SIGINT EXIT

check_env_var () {
    echo $# $1 $2
    if [ "x${!1}" = "x" ] ; then
        if [ $# = 2 ] ; then
            printf "$2\n\n"
        else
            printf "\n $1 is not defined! Define it with docker run -e $1=... \n\n"
        fi
        exit 1
    fi
}

check_env_var MAX_HEAP_SIZE
check_env_var HEAP_NEWSIZE
check_env_var CLUSTER_NAME

# Grab the container IP
ADDR=$(/sbin/ifconfig eth0 | grep 'inet addr' | cut -d: -f2 | awk '{print $1}')

check_env_var ADDR "Could not determine container's IP address"

# Check if a seed was provided
SEED=${SEED:=$ADDR}
check_env_var OPS_IP


run_datastax-agent () {

    JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.trustStore=/opt/agent/ssl/agentKeyStore"
    JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.keyStore=/opt/agent/ssl/agentKeyStore"
    JVM_OPTS="$JVM_OPTS -Djavax.net.ssl.keyStorePassword=opscenter"
    JVM_OPTS="$JVM_OPTS -Dagent-pidfile=./datastax-agent.pid"
    JVM_OPTS="$JVM_OPTS -Dlog4j.configuration=/opt/agent/conf/log4j.properties"
    JVM_OPTS="$JVM_OPTS -Xmx40M"
    JVM_OPTS="$JVM_OPTS -Xms40M"
    mv /opt/agent/datastax-agent*standalone.jar /opt/agent/datastax-agent-standalone.jar
    exec java $JVM_OPTS -jar "/opt/agent/datastax-agent-standalone.jar" "/opt/agent/conf/address.yaml" & 
    JVM_OPTS=""
}

printf "Starting DataStax Agent ... ";
   cat <<EOF> /opt/agent/conf/address.yaml
     stomp_interface: $OPS_IP
EOF

run_datastax-agent
child=$!
printf "done \n\n"

printf "Starting Cassandra\n\n";

# recreate configuration
cat <<EOF>> ${CASSANDRA_CONF}/cassandra.yaml
cluster_name: '${CLUSTER_NAME}'
listen_address: $ADDR
broadcast_rpc_address: $ADDR
rpc_address: $ADDR
seed_provider:
  - class_name: org.apache.cassandra.locator.SimpleSeedProvider
    parameters:
      - seeds: "$SEED"
data_file_directories:
  - $DATA_DIR
commitlog_directory: $COMMITLOG_DIR
num_tokens: 256
hinted_handoff_enabled: true
max_hint_window_in_ms: 10800000 # 3 hours
hinted_handoff_throttle_in_kb: 1024
max_hints_delivery_threads: 2
batchlog_replay_throttle_in_kb: 1024
authenticator: AllowAllAuthenticator
authorizer: AllowAllAuthorizer
permissions_validity_in_ms: 2000
partitioner: org.apache.cassandra.dht.Murmur3Partitioner
disk_failure_policy: stop
commit_failure_policy: stop
key_cache_size_in_mb:
key_cache_save_period: 14400
row_cache_size_in_mb: 0
row_cache_save_period: 0
counter_cache_size_in_mb:
counter_cache_save_period: 7200
commitlog_sync: periodic
commitlog_sync_period_in_ms: 10000
commitlog_segment_size_in_mb: 32
concurrent_reads: 32
concurrent_writes: 32
concurrent_counter_writes: 32
memtable_allocation_type: heap_buffers
index_summary_capacity_in_mb:
index_summary_resize_interval_in_minutes: 60
trickle_fsync: false
trickle_fsync_interval_in_kb: 10240
storage_port: 7000
ssl_storage_port: 7001
start_native_transport: true
native_transport_port: 9042
start_rpc: true
rpc_port: 9160
rpc_keepalive: true
rpc_server_type: sync
thrift_framed_transport_size_in_mb: 15
incremental_backups: false
snapshot_before_compaction: false
auto_snapshot: true
tombstone_warn_threshold: 1000
tombstone_failure_threshold: 100000
column_index_size_in_kb: 64
batch_size_warn_threshold_in_kb: 5
compaction_throughput_mb_per_sec: 16
sstable_preemptive_open_interval_in_mb: 50
read_request_timeout_in_ms: 5000
range_request_timeout_in_ms: 10000
write_request_timeout_in_ms: 2000
counter_write_request_timeout_in_ms: 5000
cas_contention_timeout_in_ms: 1000
truncate_request_timeout_in_ms: 60000
request_timeout_in_ms: 10000
cross_node_timeout: false
endpoint_snitch: SimpleSnitch
dynamic_snitch_update_interval_in_ms: 100
dynamic_snitch_reset_interval_in_ms: 600000
dynamic_snitch_badness_threshold: 0.1
request_scheduler: org.apache.cassandra.scheduler.NoScheduler
server_encryption_options:
    internode_encryption: none
    keystore: conf/.keystore
    keystore_password: cassandra
    truststore: conf/.truststore
    truststore_password: cassandra
client_encryption_options:
    enabled: false
    keystore: conf/.keystore
    keystore_password: cassandra
internode_compression: all
inter_dc_tcp_nodelay: false
EOF


cat <<EOF> ${CASSANDRA_CONF}/cassandra-env.sh
# Add heap settings
MAX_HEAP_SIZE="$MAX_HEAP_SIZE"
HEAP_NEWSIZE="$HEAP_NEWSIZE"

EOF

cat /tmp/cassandra-env.sh.in >> ${CASSANDRA_CONF}/cassandra-env.sh

cd /opt/cassandra

. "${CASSANDRA_CONF}/cassandra-env.sh"


# Parse any command line options.
classname="org.apache.cassandra.service.CassandraDaemon"
foreground="yes"
properties="-XX:ErrorFile=/etc/cassandra -XX:HeapDumpPath=/etc/cassandra" 


cassandra_parms="-Dlogback.configurationFile=logback.xml"
cassandra_parms="$cassandra_parms -Dcassandra.logdir=$CASSANDRA_HOME/logs"
cassandra_parms="$cassandra_parms -Dcassandra.storagedir=$DATA_DIR"
cassandra_parms="$cassandra_parms -Dcassandra-foreground=yes"

# The java classpath (required)
CLASSPATH="$CASSANDRA_CONF"

for jar in "$CASSANDRA_HOME"/lib/*.jar; do
    CLASSPATH="$CLASSPATH:$jar"
done

java $JVM_OPTS $cassandra_parms -cp "$CLASSPATH" $props "$classname"
